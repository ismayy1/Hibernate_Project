<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">

<hibernate-configuration>
    <session-factory>

        <!-- You define your DB Driver here. Just like we did in JDBC, but this time in configuration. -->

        <property name="connection.driver_class">org.postgresql.Driver</property>

        <property name="connection.url">jdbc:postgresql://localhost:5432/hibernate_db_02</property>
        <!-- DB Address-->

        <property name="connection.username">db_user</property> <!-- DB User -->

        <property name="connection.password">db_user</property> <!-- DB Password -->


        <!-- This allows queries to be generated by Hibernate. -->
        <!-- Analogy: If our driver was Java, then the dialect would be JDK. -->

        <property name="dialect">org.hibernate.dialect.PostgreSQLDialect</property>

        <property name="hbm2ddl.auto">update</property> <!-- create / create-drop / update -->

        <property name="show_sql">true</property> <!-- Show SQL in console -->
        <property name="format_sql">true</property> <!-- Show SQL formatted -->

        <!--        -->
        <!-- Second Level Cache and Query Cache activated-->
        <property name="hibernate.cache.use_second_level_cache">true</property>
        <property name="hibernate.cache.use_query_cache">true</property>

        <!-- Configurations for EhCache and JCache included into Hibernate configuration -->
        <property name="hibernate.cache.region.factory_class">org.hibernate.cache.jcache.internal.JCacheRegionFactory</property>

        <property name="hibernate.javax.cache.provider">org.ehcache.jsr107.EhcacheCachingProvider</property>

    </session-factory>
</hibernate-configuration>